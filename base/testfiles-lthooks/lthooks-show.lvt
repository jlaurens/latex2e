\input{regression-test}
\RequirePackage{./lthooks-show}

\ExplSyntaxOn
\debug_on:n { check-declarations , deprecation }
\ExplSyntaxOff

\documentclass{article}

% There are many different hook profiles.

\START

\TESTBlockHookEnv
  {Undefined environment envA}
  {envA}
\NewDocumentEnvironment
  {envA}{}
  {\TYPE{<BEGIN{envA}>}}
  {\TYPE{<END{envA}>}}
\begin{envA}\TYPE{<envA BODY>}\end{envA}

\NewDocumentEnvironment
  {envB}{}
  {\TYPE{<BEGIN{envB}>}}
  {\TYPE{<END{envB}>}}
\TESTBlockHookEnv
  {Defined environment envB}
  {envB}
\begin{envB}\TYPE{<envB BODY>}\end{envB}

\TESTBlockHookCmd
  {Undefined command with no arguments}
  {cmdA}
\NewDocumentCommand\cmdA{}{\TYPE{<cmdA BODY>}}
\cmdA

\NewDocumentCommand\cmdB{}{\TYPE{<cmdB BODY>}}
\TESTBlockHookCmd
  {Defined command with no arguments}
  {cmdB}
\cmdA

\TESTBlockHookCmdOneArg
  {Undefined command with one argument}
  {cmdOneArgA}
\NewDocumentCommand\cmdOneArgA{m}{\TYPE{<cmdOneArgA BODY: #1>}}
\cmdOneArgA{argA 1}

\NewDocumentCommand\cmdOneArgB{m}{\TYPE{<cmdOneArgB BODY: #1>}}
\TESTBlockHookCmdOneArg
  {Defined command with one argument}
  {cmdOneArgB}
\cmdOneArgB{argB 1}

\TESTBlockHookCustomGeneric
  {CUSTOM GENERIC HOOK}
  {CUSTOM GENERIC HOOK}

\TESTBlockHook
  {OTHER HOOK: Undeclared}
  {UNDECLARED HOOK}

\NewHook{DECLARED HOOK}

\TESTBlockHook
  {OTHER HOOK: declared}
  {DECLARED HOOK}

\NewReversedHook{DECLARED REVERSED}

\TESTBlockHook
  {OTHER HOOK: declared reversed}
  {DECLARED REVERSED}

\NewHookWithArguments{WITH ONE ARGUMENT}{1}

\TESTBlockHookOneArg
  {OTHER HOOK: with one argument}
  {WITH ONE ARGUMENT}

\NewReversedHookWithArguments{REVERSED WITH ONE ARGUMENT}{1}

\TESTBlockHookOneArg
  {OTHER HOOK: reversed with one argument}
  {REVERSED WITH ONE ARGUMENT}

\OMIT
\begin{document}
\TIMO

\BEGINTEST{After \begin{document}}

  \BEGINTEST{Commands}
    \cmdA
    \SEPARATOR
    \cmdB
    \SEPARATOR
    \cmdOneArgA{argA 1}
    \SEPARATOR
    \cmdOneArgB{argB 1}
  \ENDTEST

\ENDTEST


\TYPE{!!!! If this test changes the documentation needs updating !!!!}

\END
