% This corresponds to the latest release.
% Other `lthooks-show_????-??-??.lvt` files are frozen to
% the ????-??-?? release.

\input{regression-test}
\RequirePackage{./lthooks-show}

\ExplSyntaxOn
\debug_on:n { check-declarations , deprecation }
\ExplSyntaxOff

\documentclass{article}

% There are many different hook profiles.

\START

\TESTBlockHookEnv
  {Undefined environment envA}
  {envA}
\NewDocumentEnvironment
  {envA}{}
  {\TYPE{<BEGIN{envA}>}}
  {\TYPE{<END{envA}>}}
\begin{envA}\TYPE{<envA BODY>}\end{envA}

\NewDocumentEnvironment
  {envB}{}
  {\TYPE{<BEGIN{envB}>}}
  {\TYPE{<END{envB}>}}
\TESTBlockHookEnv
  {Defined environment envB}
  {envB}
\begin{envB}\TYPE{<envB BODY>}\end{envB}

\TESTBlockHookCmd
  {Undefined command with no arguments}
  {cmdA}
\NewDocumentCommand\cmdA{}{\TYPE{<cmdA BODY>}}
\cmdA

\NewDocumentCommand\cmdB{}{\TYPE{<cmdB BODY>}}
\TESTBlockHookCmd
  {Defined command with no arguments}
  {cmdB}
\cmdA

\TESTBlockHookCmdWithArgs
  {Undefined with two arguments}
  {cmdTwoArgsA}
  {2}
\NewDocumentCommand\cmdTwoArgsA{mm}{\TYPE{<cmdTwoArgsA BODY: /#1/#2/>}}
\cmdTwoArgsA{argA 1}{argA 2}

\NewDocumentCommand\cmdTwoArgsB{mm}{\TYPE{<cmdTwoArgsB BODY: /#1/#2/>}}
\TESTBlockHookCmdWithArgs
  {Defined with two arguments}
  {cmdTwoArgsB}
  {2}
\cmdTwoArgsB{argB 1}{argB 2}

\TESTBlockHookCustomGeneric
  {CUSTOM GENERIC HOOK}
  {CUSTOM GENERIC HOOK}

\TESTBlockHook
  {OTHER HOOK: Undeclared}
  {UNDECLARED HOOK}

\NewHook{DECLARED HOOK}

\TESTBlockHook
  {OTHER HOOK: declared}
  {DECLARED HOOK}

\NewReversedHook{DECLARED REVERSED}

\TESTBlockHook
  {OTHER HOOK: declared reversed}
  {DECLARED REVERSED}

\NewHookWithArguments
  {WITH TWO ARGUMENTS}
  {2}

\TESTBlockHookWithArgs
  {OTHER HOOK: with two arguments}
  {WITH TWO ARGUMENTS}
  {2}

\NewReversedHookWithArguments
  {REVERSED WITH TWO ARGUMENTS}
  {2}

\TESTBlockHookWithArgs
  {OTHER HOOK: reversed with two arguments}
  {REVERSED WITH TWO ARGUMENTS}
  {2}

\OMIT
\begin{document}
\TIMO

\BEGINTEST{After \begin{document}}

  \BEGINTEST{Commands}
    \cmdA
    \SEPARATOR
    \cmdB
    \SEPARATOR
    \cmdTwoArgsA{argA 1}{argA 2}
    \SEPARATOR
    \cmdTwoArgsB{argB 1}{argB 2}
  \ENDTEST

\ENDTEST


\TYPE{!!!! If this test changes the documentation needs updating !!!!}

\END
