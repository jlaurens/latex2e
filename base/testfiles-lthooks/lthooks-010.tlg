This is a generated file for the l3build validation system.
Don't change this file in any respect.
The property list \g__hook_sffamily_code_prop contains the pairs (without
outer braces):
>  {legacy}  =>  {Std sffamily code}
>  {foo}  =>  {foo code}
>  {bar}  =>  {bar code}.
<recently read> }
l. ...\prop_show:c{g__hook_sffamily_code_prop}
==> Hook: 'sffamily'
> Code chunks:
>   'legacy' -> Std sffamily code
>   'foo' -> foo code
>   'bar' -> bar code
>   next-only -> \typeout {first occasion only $\frac 12$} \AddToHookNext {sffamily}{\typeout {on second only}}
> Rules:
>   'foo' after 'bar'
> Execution order:
>   1: 'legacy'
>   2: 'bar'
>   3: 'foo'
>   4: next-only.
(../l3backend-pdftex.def
File: l3backend-pdftex.def ....-..-.. L3 backend support: PDF output (pdfTeX)
\l__color_backend_stack_int=\count...
\l__pdf_internal_box=\box...
)
No file lthooks-010.aux.
LaTeX Font Info:    Checking defaults for OML/cmm/m/it on input line ....
LaTeX Font Info:    ... okay on input line ....
LaTeX Font Info:    Checking defaults for OMS/cmsy/m/n on input line ....
LaTeX Font Info:    ... okay on input line ....
LaTeX Font Info:    Checking defaults for OT1/cmr/m/n on input line ....
LaTeX Font Info:    ... okay on input line ....
LaTeX Font Info:    Checking defaults for T1/cmr/m/n on input line ....
LaTeX Font Info:    ... okay on input line ....
LaTeX Font Info:    Checking defaults for TS1/cmr/m/n on input line ....
LaTeX Font Info:    ... okay on input line ....
LaTeX Font Info:    Checking defaults for OMX/cmex/m/n on input line ....
LaTeX Font Info:    ... okay on input line ....
LaTeX Font Info:    Checking defaults for U/cmr/m/n on input line ....
LaTeX Font Info:    ... okay on input line ....
first occasion only $\frac 12$
==> Hook: 'sffamily'
> Code chunks:
>   'legacy' -> Std sffamily code
>   'foo' -> foo code
>   'bar' -> bar code
>   next-only -> \typeout {on second only}
> Rules:
>   'foo' after 'bar'
> Execution order:
>   1: 'legacy'
>   2: 'bar'
>   3: 'foo'
>   4: next-only.
==> Hook: 'sffamily'
> Code chunks:
>   'legacy' -> Std sffamily code
>   'foo' -> foo code
>   'bar' -> bar code
>   'baz' -> baz code
>   next-only -> \typeout {on second only}
> Rules:
>   'foo' after 'bar'
>   'foo' voids 'baz'
> Execution order:
>   1: 'legacy'
>   2: 'bar'
>   3: 'baz'
>   4: 'foo'
>   5: next-only.
on second only
==> Hook: 'sffamily'
> Code chunks:
>   'legacy' -> Std sffamily code
>   'foo' -> foo code
>   'bar' -> bar code
>   'baz' -> baz code
> Rules:
>   'foo' after 'bar'
>   'foo' voids 'baz'
> Execution order:
>   1: 'legacy'
>   2: 'bar'
>   3: 'baz'
>   4: 'foo'.
The property list \g__hook_sffamily_code_prop contains the pairs (without
outer braces):
>  {legacy}  =>  {Std sffamily code}
>  {foo}  =>  {foo code}
>  {bar}  =>  {bar code}
>  {baz}  =>  {baz code}.
<recently read> }
l. ...\prop_show:c{g__hook_sffamily_code_prop}
==> Hook: 'sffamily'
> Code chunks:
>   'legacy' -> Std sffamily code
>   'foo' -> foo code
>   'bar' -> bar code
>   'baz' -> baz code
> Rules:
>   'foo' after 'bar'
>   'foo' voids 'baz'
> Execution order:
>   1: 'legacy'
>   2: 'bar'
>   3: 'baz'
>   4: 'foo'.
==> Hook: 'enddocument'
>   empty.
--- New hook after begin document ---
==> Hook: 'xxx'
>   empty.
==> Hook: 'xxx'
> Code chunks:
>   'foo' -> \typeout {some foo code ...}
>   'top-level' -> \typeout {some code ...}
> Execution order:
>   1: 'foo'
>   2: 'top-level'.
some foo code ...
some code ...
==> Hook: 'xxx'
>   empty.
