This is a generated file for the l3build validation system.
Don't change this file in any respect.
=================================
<<< Hook: 'foo'
... Attributes:
...   deprecated_generic: N
...   generic: N
...   declared: N
...   structure_exist: Y
...   usable: N
...   disabled: N
...   empty: N
...   reversed: N
...   generic_reversed: N
...   execute_immediately: N
...   # of arguments: 0
... Code chunks:
...   'top level' -> before
...   next-only empty
... Default rules:
...   None
... Rules:
...   None
... Execution order:
...   None
>>>
<<< Hook: 'foo'
... Attributes:
...   deprecated_generic: N
...   generic: N
...   declared: Y
...   structure_exist: Y
...   usable: N
...   disabled: Y
...   empty: N
...   reversed: N
...   generic_reversed: N
...   execute_immediately: N
...   # of arguments: 0
... Code chunks:
...   'top level' -> before
...   next-only empty
... Default rules:
...   None
... Rules:
...   None
... Execution order:
...   None
>>>
! LaTeX hooks Error: Cannot add code to disabled hook 'foo'.
For immediate help type H <return>.
 ...                                              
l. ...\AddToHook{\foo}{after}
                                 \DebugPrintHook{\foo}
The hook 'foo' you tried to add code to was previously disabled with
\hook_disable_generic:n or \DisableGenericHook, so it cannot have code added
to it.
<<< Hook: 'foo'
... Attributes:
...   deprecated_generic: N
...   generic: N
...   declared: Y
...   structure_exist: Y
...   usable: N
...   disabled: Y
...   empty: N
...   reversed: N
...   generic_reversed: N
...   execute_immediately: N
...   # of arguments: 0
... Code chunks:
...   'top level' -> before
...   next-only empty
... Default rules:
...   None
... Rules:
...   None
... Execution order:
...   None
>>>
=================================
<<< Hook: 'bar'
... Attributes:
...   deprecated_generic: N
...   generic: N
...   declared: N
...   structure_exist: Y
...   usable: N
...   disabled: N
...   empty: N
...   reversed: N
...   generic_reversed: N
...   execute_immediately: N
...   # of arguments: 0
... Code chunks:
...   'top level' -> before
...   next-only empty
... Default rules:
...   None
... Rules:
...   None
... Execution order:
...   None
>>>
<<< Hook: 'bar'
... Attributes:
...   deprecated_generic: N
...   generic: N
...   declared: Y
...   structure_exist: Y
...   usable: Y
...   disabled: N
...   empty: N
...   reversed: N
...   generic_reversed: N
...   execute_immediately: N
...   # of arguments: 0
... Code chunks:
...   'top level' -> before
...   next-only empty
... Default rules:
...   None
... Rules:
...   None
... Execution order:
...   None
>>>
<<< Hook: 'bar'
... Attributes:
...   deprecated_generic: N
...   generic: N
...   declared: Y
...   structure_exist: Y
...   usable: N
...   disabled: Y
...   empty: N
...   reversed: N
...   generic_reversed: N
...   execute_immediately: N
...   # of arguments: 0
... Code chunks:
...   'top level' -> before
...   next-only empty
... Default rules:
...   None
... Rules:
...   None
... Execution order:
...   None
>>>
=================================
<<< Hook: 'baz'
... Attributes:
...   deprecated_generic: N
...   generic: N
...   declared: Y
...   structure_exist: N
...   usable: N
...   disabled: Y
...   empty: Y
...   reversed: N
...   generic_reversed: N
...   execute_immediately: N
...   # of arguments: 0
... Code chunks:
...   'top level' empty
...   next-only empty
... Default rules:
...   None
... Rules:
...   None
... Execution order:
...   None
>>>
! LaTeX hooks Error: Cannot add code to disabled hook 'baz'.
For immediate help type H <return>.
 ...                                              
l. ...\AddToHookNext{\foo}{after}
                                 \DebugPrintHook{\foo}
The hook 'baz' you tried to add code to was previously disabled with
\hook_disable_generic:n or \DisableGenericHook, so it cannot have code added
to it.
<<< Hook: 'baz'
... Attributes:
...   deprecated_generic: N
...   generic: N
...   declared: Y
...   structure_exist: N
...   usable: N
...   disabled: Y
...   empty: Y
...   reversed: N
...   generic_reversed: N
...   execute_immediately: N
...   # of arguments: 0
... Code chunks:
...   'top level' empty
...   next-only empty
... Default rules:
...   None
... Rules:
...   None
... Execution order:
...   None
>>>
=================================
<<< Hook: 'env/foo/before'
... Attributes:
...   deprecated_generic: N
...   generic: Y
...   declared: Y
...   structure_exist: N
...   usable: N
...   disabled: Y
...   empty: Y
...   reversed: N
...   generic_reversed: N
...   execute_immediately: N
...   # of arguments: 0
... Code chunks:
...   'top level' empty
...   next-only empty
... Default rules:
...   None
... Rules:
...   None
... Execution order:
...   None
>>>
! LaTeX hooks Error: Cannot add code to disabled hook 'env/foo/before'.
For immediate help type H <return>.
 ...                                              
l. ...\AddToHookNext{\foo}{after}
                                 \DebugPrintHook{\foo}
The hook 'env/foo/before' you tried to add code to was previously disabled
with \hook_disable_generic:n or \DisableGenericHook, so it cannot have code
added to it.
<<< Hook: 'env/foo/before'
... Attributes:
...   deprecated_generic: N
...   generic: Y
...   declared: Y
...   structure_exist: N
...   usable: N
...   disabled: Y
...   empty: Y
...   reversed: N
...   generic_reversed: N
...   execute_immediately: N
...   # of arguments: 0
... Code chunks:
...   'top level' empty
...   next-only empty
... Default rules:
...   None
... Rules:
...   None
... Execution order:
...   None
>>>
=================================
<<< Hook: 'cmd/test/before'
... Attributes:
...   deprecated_generic: N
...   generic: Y
...   declared: Y
...   structure_exist: N
...   usable: N
...   disabled: Y
...   empty: Y
...   reversed: N
...   generic_reversed: N
...   execute_immediately: N
...   # of arguments: 0
... Code chunks:
...   'top level' empty
...   next-only empty
... Default rules:
...   None
... Rules:
...   None
... Execution order:
...   None
>>>
! LaTeX hooks Error: Cannot add code to disabled hook 'cmd/test/before'.
For immediate help type H <return>.
 ...                                              
l. ...\AddToHook{\foo}{after}
                                 \DebugPrintHook{\foo}
The hook 'cmd/test/before' you tried to add code to was previously disabled
with \hook_disable_generic:n or \DisableGenericHook, so it cannot have code
added to it.
<<< Hook: 'cmd/test/before'
... Attributes:
...   deprecated_generic: N
...   generic: Y
...   declared: Y
...   structure_exist: N
...   usable: N
...   disabled: Y
...   empty: Y
...   reversed: N
...   generic_reversed: N
...   execute_immediately: N
...   # of arguments: 0
... Code chunks:
...   'top level' empty
...   next-only empty
... Default rules:
...   None
... Rules:
...   None
... Execution order:
...   None
>>>
=================================
<<< Hook: 'cmd/mycmd/after'
... Attributes:
...   deprecated_generic: N
...   generic: Y
...   declared: N
...   structure_exist: Y
...   usable: Y
...   disabled: N
...   empty: N
...   reversed: Y
...   generic_reversed: Y
...   execute_immediately: N
...   # of arguments: 9
... Code chunks:
...   'XXX' -> \ERROR 1
...   'top level' empty
...   next-only-> \ERROR 2
... Default rules:
...   None
... Rules:
...   None
... Execution order:
...   'XXX'
>>>
! LaTeX hooks Error: Cannot add code to disabled hook 'cmd/mycmd/after'.
For immediate help type H <return>.
 ...                                              
l. ...\AddToHook{\foo}{\ERROR 3}
The hook 'cmd/mycmd/after' you tried to add code to was previously disabled
with \hook_disable_generic:n or \DisableGenericHook, so it cannot have code
added to it.
<<< Hook: 'cmd/mycmd/after'
... Attributes:
...   deprecated_generic: N
...   generic: Y
...   declared: Y
...   structure_exist: Y
...   usable: N
...   disabled: Y
...   empty: N
...   reversed: Y
...   generic_reversed: Y
...   execute_immediately: N
...   # of arguments: 9
... Code chunks:
...   'XXX' -> \ERROR 1
...   'top level' empty
...   next-only-> \ERROR 2
... Default rules:
...   None
... Rules:
...   None
... Execution order:
...   'XXX'
>>>
> \mycmd=macro:
->\@ifnextchar [{\mycmdaux }{\mycmdaux []}.
<argument> \mycmd 
l. ...\ShowCommand\mycmd
