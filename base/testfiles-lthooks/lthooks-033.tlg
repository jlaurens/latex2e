This is a generated file for the l3build validation system.
Don't change this file in any respect.
============================================================
TEST 1: Add with hooks, but declare without
============================================================
==> Hook: 'foo'
> Code chunks:
>   'legacy' -> \typeout {foo legacy code ##1}
> Execution order:
>   1: 'legacy'.
<recently read> }
l. ...  }
foo legacy code ##1
==> Hook: 'fooarg'
>   1 argument
> Code chunks:
>   'legacy' -> \typeout {fooarg legacy code ##1}
> Execution order:
>   1: 'legacy'.
<recently read> }
l. ...  }
fooarg legacy code ##1
==> Hook: 'bar'
> Code chunks:
>   'legacy' -> \typeout {bar legacy code ##1}
> Execution order:
>   1: 'legacy'.
<recently read> }
l. ...  }
bar legacy code ##1
==> Hook: 'bararg'
>   1 argument
> Code chunks:
>   'legacy' -> \typeout {bararg legacy code ##1}
> Execution order:
>   1: 'legacy'.
<recently read> }
l. ...  }
bararg legacy code ##1
============================================================
============================================================
TEST 2: Two arguments
============================================================
==> Hook: 'test-2'
>   2 arguments
> Code chunks:
>   'label' -> \typeout {label-hashes(##1,##2)}\typeout {label-args(#1,#2)}\typeout {label-hashes(##1,##2)}\typeout {label-args(#1,#2)}
>   'top-level' -> \typeout {top-hashes(##1,##2)}\typeout {top-args(#1,#2)}\typeout {top-hashes(##1,##2)}\typeout {top-args(#1,#2)}
>   next-only -> \typeout {next-hashes(##1,##2)}\typeout {next-args(#1,#2)}\typeout {next-hashes(##1,##2)}\typeout {next-args(#1,#2)}
> Execution order:
>   1: 'label'
>   2: 'top-level'
>   3: next-only.
<recently read> }
l. ...  }
label-hashes(##1,##2)
label-args(foo,bar)
label-hashes(##1,##2)
label-args(foo,bar)
top-hashes(##1,##2)
top-args(foo,bar)
top-hashes(##1,##2)
top-args(foo,bar)
next-hashes(##1,##2)
next-args(foo,bar)
next-hashes(##1,##2)
next-args(foo,bar)
============================================================
============================================================
TEST 3: One argument
============================================================
! Illegal parameter number in definition of \__hook_toplevel test-1.
<to be read again> 
                   2
l. ...  }
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.
! Illegal parameter number in definition of \__hook_toplevel test-1.
<to be read again> 
                   2
l. ...  }
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.
! Illegal parameter number in definition of \__hook_next test-1.
<to be read again> 
                   2
l. ...  }
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.
! Illegal parameter number in definition of \__hook_next test-1.
<to be read again> 
                   2
l. ...  }
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.
! Illegal parameter number in definition of hook 'test-1'.
(hooks)             Invalid code added on line ....
<to be read again> 
                   2
l. ...  }
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.
! Illegal parameter number in definition of hook 'test-1'.
(hooks)             Invalid code added on line ....
<to be read again> 
                   2
l. ...  }
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.
==> Hook: 'test-1'
>   1 argument
> Code chunks:
>   'label' -> \typeout {label-hashes(##1,##2)}\typeout {label-args(#1,##2)}\typeout {label-hashes(##1,##2)}\typeout {label-args(#1,##2)}
>   'top-level' -> \typeout {top-hashes(##1,##2)}\typeout {top-args(#1,##2)}\typeout {top-hashes(##1,##2)}\typeout {top-args(#1,##2)}
>   next-only -> \typeout {next-hashes(##1,##2)}\typeout {next-args(#1,##2)}\typeout {next-hashes(##1,##2)}\typeout {next-args(#1,##2)}
> Execution order:
>   1: 'label'
>   2: 'top-level'
>   3: next-only.
<recently read> }
l. ...  }
label-hashes(##1,##2)
label-args(foo,##2)
label-hashes(##1,##2)
label-args(foo,##2)
top-hashes(##1,##2)
top-args(foo,##2)
top-hashes(##1,##2)
top-args(foo,##2)
next-hashes(##1,##2)
next-args(foo,##2)
next-hashes(##1,##2)
next-args(foo,##2)
==> Hook: 'test-1'
>   1 argument
> Code chunks:
>   'label' -> \typeout {label-hashes(##1,##2)}\typeout {label-args(#1,##2)}\typeout {label-hashes(##1,##2)}\typeout {label-args(#1,##2)}
>   'top-level' -> \typeout {top-hashes(##1,##2)}\typeout {top-args(#1,##2)}\typeout {top-hashes(##1,##2)}\typeout {top-args(#1,##2)}
> Execution order:
>   1: 'label'
>   2: 'top-level'.
<recently read> }
l. ...  }
============================================================
============================================================
TEST 4: Zero arguments
============================================================
! LaTeX hooks Error: Hook 'test-0' has no arguments.
For immediate help type H <return>.
 ...                                              
l. ...  }
You tried to use \AddToHookWithArguments on a hook that takes no arguments.
Check the usage of the hook or use \AddToHook instead.
LaTeX will use \AddToHook.
! LaTeX hooks Error: Hook 'test-0' has no arguments.
For immediate help type H <return>.
 ...                                              
l. ...  }
You tried to use \AddToHookWithArguments on a hook that takes no arguments.
Check the usage of the hook or use \AddToHook instead.
LaTeX will use \AddToHook.
! LaTeX hooks Error: Hook 'test-0' has no arguments.
For immediate help type H <return>.
 ...                                              
l. ...  }
You tried to use \AddToHookNextWithArguments on a hook that takes no
arguments.
Check the usage of the hook or use \AddToHookNext instead.
LaTeX will use \AddToHookNext.
! LaTeX hooks Error: Hook 'test-0' has no arguments.
For immediate help type H <return>.
 ...                                              
l. ...  }
You tried to use \AddToHookNextWithArguments on a hook that takes no
arguments.
Check the usage of the hook or use \AddToHookNext instead.
LaTeX will use \AddToHookNext.
! LaTeX hooks Error: Hook 'test-0' has no arguments.
For immediate help type H <return>.
 ...                                              
l. ...  }
You tried to use \AddToHookWithArguments on a hook that takes no arguments.
Check the usage of the hook or use \AddToHook instead.
LaTeX will use \AddToHook.
! LaTeX hooks Error: Hook 'test-0' has no arguments.
For immediate help type H <return>.
 ...                                              
l. ...  }
You tried to use \AddToHookWithArguments on a hook that takes no arguments.
Check the usage of the hook or use \AddToHook instead.
LaTeX will use \AddToHook.
==> Hook: 'test-0'
> Code chunks:
>   'label' -> \typeout {label-hashes(##1,##2)}\typeout {label-args(##1,##2)}\typeout {label-hashes(##1,##2)}\typeout {label-args(##1,##2)}
>   'top-level' -> \typeout {top-hashes(##1,##2)}\typeout {top-args(##1,##2)}\typeout {top-hashes(##1,##2)}\typeout {top-args(##1,##2)}
>   next-only -> \typeout {next-hashes(##1,##2)}\typeout {next-args(##1,##2)}\typeout {next-hashes(##1,##2)}\typeout {next-args(##1,##2)}
> Execution order:
>   1: 'label'
>   2: 'top-level'
>   3: next-only.
<recently read> }
l. ...  }
label-hashes(##1,##2)
label-args(##1,##2)
label-hashes(##1,##2)
label-args(##1,##2)
top-hashes(##1,##2)
top-args(##1,##2)
top-hashes(##1,##2)
top-args(##1,##2)
next-hashes(##1,##2)
next-args(##1,##2)
next-hashes(##1,##2)
next-args(##1,##2)
============================================================
============================================================
TEST 5: Ten arguments
============================================================
! LaTeX hooks Error: Too many arguments for hook 'test-10'.
For immediate help type H <return>.
 ...                                              
l. ...  }
You tried to declare a hook with 10 arguments, but a hook can only have up to
nine. LaTeX will define this hook with nine arguments.
==> Hook: 'test-10'
>   9 arguments
> Code chunks:
>   'label' -> \typeout {10-label(#1,#2)}
>   'top-level' -> \typeout {10-top-level(#1,#2)}
>   next-only -> \typeout {10-next(#1,#2)}
> Execution order:
>   1: 'label'
>   2: 'top-level'
>   3: next-only.
<recently read> }
l. ...  }
10-label(foo,bar)
10-top-level(foo,bar)
10-next(foo,bar)
============================================================
============================================================
TEST 6: No arguments
============================================================
! LaTeX hooks Error: Hook 'no-args' has no arguments.
For immediate help type H <return>.
 ...                                              
l. ...  }
You tried to use \AddToHookWithArguments on a hook that takes no arguments.
Check the usage of the hook or use \AddToHook instead.
LaTeX will use \AddToHook.
! LaTeX hooks Error: Hook 'no-args' has no arguments.
For immediate help type H <return>.
 ...                                              
l. ...  }
You tried to use \AddToHookWithArguments on a hook that takes no arguments.
Check the usage of the hook or use \AddToHook instead.
LaTeX will use \AddToHook.
! LaTeX hooks Error: Hook 'no-args' has no arguments.
For immediate help type H <return>.
 ...                                              
l. ...  }
You tried to use \AddToHookNextWithArguments on a hook that takes no
arguments.
Check the usage of the hook or use \AddToHookNext instead.
LaTeX will use \AddToHookNext.
no-label(##1,##2)
no-label(##1,##2)
no-top-level(##1,##2)
no-top-level(##1,##2)
no-next(##1,##2)
no-next(##1,##2)
============================================================
============================================================
TEST 7: One-time hook with arguments
============================================================
==> Hook: 'use-once'
>   2 arguments
> Code chunks:
>   'top-level' -> \typeout {once(#1,#2)}
> Execution order:
>   1: 'top-level'.
<recently read> }
l. ...  }
once(foo,bar)
! LaTeX hooks Error: You can't have arguments in used one-time hook
(hooks)              'use-once'.
For immediate help type H <return>.
 ...                                              
l. ...  }
You tried to use \AddToHookWithArguments on a one-time hook that has already
been used. You have to add the code before the hook is used, or add the code
without arguments using \AddToHook instead.
LaTeX will use \AddToHook.
twice(##1,##2)
==> Hook: 'use-once'
>   2 arguments.
<recently read> }
l. ...  }
============================================================
============================================================
TEST 8: Add with arguments before hook is declared
============================================================
==> Hook: 'not-declared'
>   not declared
> Code chunks:
>   'label' -> \typeout {label-args(#1,#2)}\typeout {label-hashes(##1,##2)}
>   'top-level' -> \typeout {top-args(#1,#2)}\typeout {top-hashes(##1,##2)}
>   next-only -> \typeout {next-args(#1,#2)}\typeout {next-hashes(##1,##2)}
> No execution.
<recently read> }
l. ...  }
==> Hook: 'not-declared'
>   2 arguments
> Code chunks:
>   'label' -> \typeout {label-args(#1,#2)}\typeout {label-hashes(##1,##2)}\typeout {label-more-args(#1,#2)}\typeout {label-more-hashes(##1,##2)}
>   'top-level' -> \typeout {top-args(#1,#2)}\typeout {top-hashes(##1,##2)}\typeout {top-more-args(#1,#2)}\typeout {top-more-hashes(##1,##2)}
>   next-only -> \typeout {next-args(#1,#2)}\typeout {next-hashes(##1,##2)}\typeout {next-more-args(#1,#2)}\typeout {next-more-hashes(##1,##2)}
> Execution order:
>   1: 'label'
>   2: 'top-level'
>   3: next-only.
<recently read> }
l. ...  }
label-args(foo,bar)
label-hashes(##1,##2)
label-more-args(foo,bar)
label-more-hashes(##1,##2)
top-args(foo,bar)
top-hashes(##1,##2)
top-more-args(foo,bar)
top-more-hashes(##1,##2)
next-args(foo,bar)
next-hashes(##1,##2)
next-more-args(foo,bar)
next-more-hashes(##1,##2)
============================================================
============================================================
TEST 9: Testing with nine arguments
============================================================
==> Hook: 'not-nine'
>   not declared
> Code chunks:
>   'label' -> \typeout {label-args(#1,#9)}\typeout {label-hashes(##1,##9)}
>   'top-level' -> \typeout {top-args(#1,#9)}\typeout {top-hashes(##1,##9)}
>   next-only -> \typeout {next-args(#1,#9)}\typeout {next-hashes(##1,##9)}
> No execution.
<recently read> }
l. ...  }
==> Hook: 'not-nine'
>   9 arguments
> Code chunks:
>   'label' -> \typeout {label-args(#1,#9)}\typeout {label-hashes(##1,##9)}\typeout {label-more-args(#1,#9)}\typeout {label-more-hashes(##1,##9)}
>   'top-level' -> \typeout {top-args(#1,#9)}\typeout {top-hashes(##1,##9)}\typeout {top-more-args(#1,#9)}\typeout {top-more-hashes(##1,##9)}
>   next-only -> \typeout {next-args(#1,#9)}\typeout {next-hashes(##1,##9)}\typeout {next-more-args(#1,#9)}\typeout {next-more-hashes(##1,##9)}
> Execution order:
>   1: 'label'
>   2: 'top-level'
>   3: next-only.
<recently read> }
l. ...  }
label-args(foo,bar)
label-hashes(##1,##9)
label-more-args(foo,bar)
label-more-hashes(##1,##9)
top-args(foo,bar)
top-hashes(##1,##9)
top-more-args(foo,bar)
top-more-hashes(##1,##9)
next-args(foo,bar)
next-hashes(##1,##9)
next-more-args(foo,bar)
next-more-hashes(##1,##9)
============================================================
============================================================
TEST 10: Add with hooks, but declare without
============================================================
==> Hook: 'liar'
>   not declared
> Code chunks:
>   'label' -> \typeout {label-arg(#1)}\typeout {label-hash(##1)}
>   'top-level' -> \typeout {top-arg(#1)}\typeout {top-hash(##1)}
>   next-only -> \typeout {next-arg(#1)}\typeout {next-hash(##1)}
> No execution.
<recently read> }
l. ...  }
! Illegal parameter number in definition of \__hook_toplevel liar.
<to be read again> 
                   1
l. ...  }
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.
! Illegal parameter number in definition of \__hook_next liar.
<to be read again> 
                   1
l. ...  }
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.
! Illegal parameter number in definition of hook 'liar'.
(hooks)             Offending label: 'label'.
<to be read again> 
                   1
l. ...  }
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.
==> Hook: 'liar'
> Code chunks:
>   'label' -> \typeout {label-arg(##1)}\typeout {label-hash(##1)}\typeout {more-label-hash(##1)}
>   'top-level' -> \typeout {top-arg(##1)}\typeout {top-hash(##1)}\typeout {more-top-hash(##1)}
>   next-only -> \typeout {next-arg(##1)}\typeout {next-hash(##1)}\typeout {more-next-hash(##1)}
> Execution order:
>   1: 'label'
>   2: 'top-level'
>   3: next-only.
<recently read> }
l. ...  }
label-arg(##1)
label-hash(##1)
more-label-hash(##1)
top-arg(##1)
top-hash(##1)
more-top-hash(##1)
next-arg(##1)
next-hash(##1)
more-next-hash(##1)
============================================================
