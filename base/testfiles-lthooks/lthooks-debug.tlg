This is a generated file for the l3build validation system.
Don't change this file in any respect.
============================================================
TEST 1: Generic
============================================================
============================================================
TEST 2: builtin
============================================================
============================================================
TEST 3: Raw generic hook
============================================================
<<< Hook: 'cmd/?/before'
... Attributes:
...   deprecated_generic: N
...   generic: Y
...   declared: N
...   structure_exist: N
...   usable: N
...   disabled: N
...   empty: Y
...   reversed: N
...   generic_reversed: N
...   consumed: N
...   # of arguments: 0
... Code chunks:
...   'top level' empty
...   next-only empty
... Default rules:
...   None
... Rules:
...   None
... Execution order:
...   None
>>>
============================================================
============================================================
TEST 4: Automatically activated by \AddToHook 
============================================================
<<< Hook: 'cmd/?/before'
... Attributes:
...   deprecated_generic: N
...   generic: Y
...   declared: N
...   structure_exist: Y
...   usable: Y
...   disabled: N
...   empty: N
...   reversed: N
...   generic_reversed: N
...   consumed: N
...   # of arguments: 9
... Code chunks:
...   'top level' -> \TYPE {...}
...   next-only empty
... Default rules:
...   None
... Rules:
...   None
... Execution order:
...   None
>>>
============================================================
============================================================
TEST 5: Disabled
============================================================
<<< Hook: 'cmd/?/before'
... Attributes:
...   deprecated_generic: N
...   generic: Y
...   declared: Y
...   structure_exist: Y
...   usable: N
...   disabled: Y
...   empty: N
...   reversed: N
...   generic_reversed: N
...   consumed: N
...   # of arguments: 9
... Code chunks:
...   'top level' -> \TYPE {...}
...   next-only empty
... Default rules:
...   None
... Rules:
...   None
... Execution order:
...   None
>>>
============================================================
============================================================
TEST 6: Reversed
============================================================
<<< Hook: 'cmd/?/after'
... Attributes:
...   deprecated_generic: N
...   generic: Y
...   declared: N
...   structure_exist: N
...   usable: N
...   disabled: N
...   empty: Y
...   reversed: N
...   generic_reversed: Y
...   consumed: N
...   # of arguments: 0
... Code chunks:
...   'top level' empty
...   next-only empty
... Default rules:
...   None
... Rules:
...   None
... Execution order:
...   None
>>>
============================================================
============================================================
TEST 7: Automatically activated by \AddToHook 
============================================================
<<< Hook: 'cmd/?/after'
... Attributes:
...   deprecated_generic: N
...   generic: Y
...   declared: N
...   structure_exist: Y
...   usable: Y
...   disabled: N
...   empty: N
...   reversed: Y
...   generic_reversed: Y
...   consumed: N
...   # of arguments: 9
... Code chunks:
...   'top level' -> \TYPE {...}
...   next-only empty
... Default rules:
...   None
... Rules:
...   None
... Execution order:
...   None
>>>
============================================================
============================================================
TEST 8: Deprecated generic
============================================================
<<< Hook: 'file/before/...'
... Attributes:
...   deprecated_generic: Y
...   generic: N
...   declared: N
...   structure_exist: N
...   usable: N
...   disabled: N
...   empty: Y
...   reversed: N
...   generic_reversed: N
...   consumed: N
...   # of arguments: 0
... Code chunks:
...   'top level' empty
...   next-only empty
... Default rules:
...   None
... Rules:
...   None
... Execution order:
...   None
>>>
============================================================
============================================================
============================================================
TEST 9: Custom
============================================================
============================================================
TEST 10: Before and after \ActivateGenericHook 
============================================================
<<< Hook: 'Custom'
... Attributes:
...   deprecated_generic: N
...   generic: N
...   declared: N
...   structure_exist: N
...   usable: N
...   disabled: N
...   empty: Y
...   reversed: N
...   generic_reversed: N
...   consumed: N
...   # of arguments: 0
... Code chunks:
...   'top level' empty
...   next-only empty
... Default rules:
...   None
... Rules:
...   None
... Execution order:
...   None
>>>
<<< Hook: 'Custom'
... Attributes:
...   deprecated_generic: N
...   generic: N
...   declared: Y
...   structure_exist: Y
...   usable: Y
...   disabled: N
...   empty: Y
...   reversed: N
...   generic_reversed: N
...   consumed: N
...   # of arguments: 0
... Code chunks:
...   'top level' empty
...   next-only empty
... Default rules:
...   None
... Rules:
...   None
... Execution order:
...   None
>>>
============================================================
============================================================
TEST 11: \DisableGenericHook 
============================================================
============================================================
<<< Hook: 'Custom'
... Attributes:
...   deprecated_generic: N
...   generic: N
...   declared: Y
...   structure_exist: Y
...   usable: N
...   disabled: Y
...   empty: Y
...   reversed: N
...   generic_reversed: N
...   consumed: N
...   # of arguments: 0
... Code chunks:
...   'top level' empty
...   next-only empty
... Default rules:
...   None
... Rules:
...   None
... Execution order:
...   None
>>>
============================================================
============================================================
============================================================
TEST 12: One-time
============================================================
============================================================
TEST 13: One-time/basic
============================================================
<<< Hook: 'One-time/basic'
... Attributes:
...   deprecated_generic: N
...   generic: N
...   declared: Y
...   structure_exist: Y
...   usable: Y
...   disabled: N
...   empty: Y
...   reversed: N
...   generic_reversed: N
...   consumed: Y
...   # of arguments: 0
... Code chunks:
...   'top level' empty
...   next-only empty
... Default rules:
...   None
... Rules:
...   None
... Execution order:
...   None
>>>
============================================================
============================================================
TEST 14: One-time/reverse
============================================================
<<< Hook: 'One-time/reverse'
... Attributes:
...   deprecated_generic: N
...   generic: N
...   declared: Y
...   structure_exist: Y
...   usable: Y
...   disabled: N
...   empty: Y
...   reversed: N
...   generic_reversed: N
...   consumed: Y
...   # of arguments: 0
... Code chunks:
...   'top level' empty
...   next-only empty
... Default rules:
...   None
... Rules:
...   None
... Execution order:
...   None
>>>
============================================================
============================================================
TEST 15: One-time/arguments
============================================================
<<< Hook: 'One-time/arguments'
... Attributes:
...   deprecated_generic: N
...   generic: N
...   declared: Y
...   structure_exist: Y
...   usable: Y
...   disabled: N
...   empty: Y
...   reversed: N
...   generic_reversed: N
...   consumed: Y
...   # of arguments: 2
... Code chunks:
...   'top level' empty
...   next-only empty
... Default rules:
...   None
... Rules:
...   None
... Execution order:
...   None
>>>
============================================================
============================================================
TEST 16: One-time/reverse/arguments
============================================================
<<< Hook: 'One-time/reverse/arguments'
... Attributes:
...   deprecated_generic: N
...   generic: N
...   declared: Y
...   structure_exist: Y
...   usable: Y
...   disabled: N
...   empty: Y
...   reversed: N
...   generic_reversed: N
...   consumed: Y
...   # of arguments: 2
... Code chunks:
...   'top level' empty
...   next-only empty
... Default rules:
...   None
... Rules:
...   None
... Execution order:
...   None
>>>
============================================================
============================================================
============================================================
TEST 17: Code chunks
============================================================
============================================================
TEST 18: Code chunks/Normal
============================================================
<<< Hook: 'Code chunks/Normal'
... Attributes:
...   deprecated_generic: N
...   generic: N
...   declared: Y
...   structure_exist: Y
...   usable: Y
...   disabled: N
...   empty: N
...   reversed: N
...   generic_reversed: N
...   consumed: N
...   # of arguments: 0
... Code chunks:
...   'LABEL_A' -> \TYPE {CODE_A}
...   'LABEL_B' -> \TYPE {CODE_B}
...   'LABEL_C' -> \TYPE {CODE_C}
...   'top level' -> \TYPE {TOP-LEVEL}
...   next-only-> \TYPE {NEXT-ONLY}
... Default rules:
...   None
... Rules:
...   None
... Execution order:
...   'LABEL_A', 'LABEL_B', 'LABEL_C'
>>>
============================================================
============================================================
TEST 19: Code chunks/Reversed
============================================================
<<< Hook: 'Code chunks/Reversed'
... Attributes:
...   deprecated_generic: N
...   generic: N
...   declared: Y
...   structure_exist: Y
...   usable: Y
...   disabled: N
...   empty: N
...   reversed: Y
...   generic_reversed: N
...   consumed: N
...   # of arguments: 0
... Code chunks:
...   'LABEL_A' -> \TYPE {CODE_A}
...   'LABEL_B' -> \TYPE {CODE_B}
...   'LABEL_C' -> \TYPE {CODE_C}
...   'top level' -> \TYPE {TOP-LEVEL}
...   next-only-> \TYPE {NEXT-ONLY}
... Default rules:
...   None
... Rules:
...   None
... Execution order:
...   'LABEL_C', 'LABEL_B', 'LABEL_A'
>>>
============================================================
============================================================
TEST 20: Code chunks/With arguments
============================================================
<<< Hook: 'Code chunks/With arguments'
... Attributes:
...   deprecated_generic: N
...   generic: N
...   declared: Y
...   structure_exist: Y
...   usable: Y
...   disabled: N
...   empty: N
...   reversed: N
...   generic_reversed: N
...   consumed: N
...   # of arguments: 2
... Code chunks:
...   'LABEL_A' -> \TYPE {CODE_A}
...   'LABEL_B' -> \TYPE {CODE_B}
...   'LABEL_C' -> \TYPE {CODE_C}
...   'top level' -> \TYPE {TOP-LEVEL}\TYPE {NEXT-ONLY}
...   next-only empty
... Default rules:
...   None
... Rules:
...   None
... Execution order:
...   'LABEL_A', 'LABEL_B', 'LABEL_C'
>>>
============================================================
============================================================
TEST 21: Code chunks/Reversed with arguments
============================================================
<<< Hook: 'Code chunks/Reversed with arguments'
... Attributes:
...   deprecated_generic: N
...   generic: N
...   declared: Y
...   structure_exist: Y
...   usable: Y
...   disabled: N
...   empty: N
...   reversed: Y
...   generic_reversed: N
...   consumed: N
...   # of arguments: 2
... Code chunks:
...   'LABEL_A' -> \TYPE {CODE_A}
...   'LABEL_B' -> \TYPE {CODE_B}
...   'LABEL_C' -> \TYPE {CODE_C}
...   'top level' -> \TYPE {TOP-LEVEL}\TYPE {NEXT-ONLY}
...   next-only empty
... Default rules:
...   None
... Rules:
...   None
... Execution order:
...   'LABEL_C', 'LABEL_B', 'LABEL_A'
>>>
============================================================
============================================================
============================================================
TEST 22: Rules
============================================================
============================================================
TEST 23: Named rules override default ones
============================================================
<<< Hook: 'Rules'
... Attributes:
...   deprecated_generic: N
...   generic: N
...   declared: Y
...   structure_exist: Y
...   usable: Y
...   disabled: N
...   empty: N
...   reversed: N
...   generic_reversed: N
...   consumed: N
...   # of arguments: 0
... Code chunks:
...   'LABEL_A' -> \TYPE {CODE_A}
...   'LABEL_B' -> \TYPE {CODE_B}
...   'LABEL_C' -> \TYPE {CODE_C}
...   'top level' empty
...   next-only empty
... Default rules:
...   None
... Rules:
...   'LABEL_B' < 'LABEL_A'
...   'LABEL_C' < 'LABEL_A'
...   'LABEL_C' < 'LABEL_B'
... Execution order:
...   'LABEL_C', 'LABEL_B', 'LABEL_A'
>>>
============================================================
============================================================
TEST 24: Default rules
============================================================
<<< Hook: 'Rules'
... Attributes:
...   deprecated_generic: N
...   generic: N
...   declared: Y
...   structure_exist: Y
...   usable: Y
...   disabled: N
...   empty: N
...   reversed: N
...   generic_reversed: N
...   consumed: N
...   # of arguments: 0
... Code chunks:
...   'LABEL_A' -> \TYPE {CODE_A}
...   'LABEL_B' -> \TYPE {CODE_B}
...   'LABEL_C' -> \TYPE {CODE_C}
...   'top level' empty
...   next-only empty
... Default rules:
...   'LABEL_B' > 'LABEL_A'
...   'LABEL_C' > 'LABEL_A'
...   'LABEL_C' > 'LABEL_B'
... Rules:
...   None
... Execution order:
...   'LABEL_A', 'LABEL_B', 'LABEL_C'
>>>
============================================================
============================================================
!!!! If this test changes the documentation needs updating !!!!
