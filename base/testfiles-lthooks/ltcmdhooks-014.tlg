This is a generated file for the l3build validation system.
Don't change this file in any respect.
<<< Hook: 'cmdfoobefore'
... Attributes:
...   deprecated_generic: N
...   generic: N
...   declared: N
...   structure_exist: Y
...   usable: N
...   disabled: N
...   empty: N
...   reversed: N
...   generic_reversed: N
...   execute_immediately: N
...   # of arguments: 0
... Code chunks:
...   'top level' -> \typeout {[foo/before] (#1)}
...   next-only empty
... Default rules:
...   None
... Rules:
...   None
... Execution order:
...   None
>>>
<<< Hook: 'cmd/foo/before'
... Attributes:
...   deprecated_generic: N
...   generic: Y
...   declared: N
...   structure_exist: Y
...   usable: Y
...   disabled: N
...   empty: N
...   reversed: N
...   generic_reversed: N
...   execute_immediately: N
...   # of arguments: 9
... Code chunks:
...   'top level' -> \typeout {[foo/before] (#1)}\typeout {[foo/before/2] (#1)}
...   next-only empty
... Default rules:
...   None
... Rules:
...   None
... Execution order:
...   None
>>>
> \bar=macro:
#1->\typeout {[bar/body] (#1)}.
l. ...\show\bar
<<< Hook: 'cmd/bar/before'
... Attributes:
...   deprecated_generic: N
...   generic: Y
...   declared: N
...   structure_exist: Y
...   usable: Y
...   disabled: N
...   empty: N
...   reversed: N
...   generic_reversed: N
...   execute_immediately: N
...   # of arguments: 9
... Code chunks:
...   'top level' -> \typeout {[bar/before] (#1)}\typeout {[bar/before/2] (#1)}
...   next-only empty
... Default rules:
...   None
... Rules:
...   None
... Execution order:
...   None
>>>
<<< Hook: 'cmd/bar/after'
... Attributes:
...   deprecated_generic: N
...   generic: Y
...   declared: N
...   structure_exist: Y
...   usable: Y
...   disabled: N
...   empty: N
...   reversed: Y
...   generic_reversed: Y
...   execute_immediately: N
...   # of arguments: 9
... Code chunks:
...   'top level' -> \typeout {[bar/after] (#2)}\typeout {[bar/after/2] (#2)}
...   next-only empty
... Default rules:
...   None
... Rules:
...   None
... Execution order:
...   None
>>>
! Illegal parameter number in definition of \__hook_toplevel cmd/bar/after.
<to be read again> 
                   2
l. ......e __hook_cmd_begindocument_code:\endcsname
                                                   % \begin{document}
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.
! Illegal parameter number in definition of \__hook_toplevel cmd/bar/after.
<to be read again> 
                   2
l. ......e __hook_cmd_begindocument_code:\endcsname
                                                   % \begin{document}
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.
<<< Hook: 'cmdfoobefore'
... Attributes:
...   deprecated_generic: N
...   generic: N
...   declared: N
...   structure_exist: Y
...   usable: N
...   disabled: N
...   empty: N
...   reversed: N
...   generic_reversed: N
...   execute_immediately: N
...   # of arguments: 0
... Code chunks:
...   'top level' -> \typeout {[foo/before] (#1)}
...   next-only empty
... Default rules:
...   None
... Rules:
...   None
... Execution order:
...   None
>>>
<<< Hook: 'cmd/foo/before'
... Attributes:
...   deprecated_generic: N
...   generic: Y
...   declared: N
...   structure_exist: Y
...   usable: Y
...   disabled: N
...   empty: N
...   reversed: N
...   generic_reversed: N
...   execute_immediately: N
...   # of arguments: 9
... Code chunks:
...   'top level' -> \typeout {[foo/before] (#1)}\typeout {[foo/before/2] (#1)}
...   next-only empty
... Default rules:
...   None
... Rules:
...   None
... Execution order:
...   None
>>>
> \bar=macro:
#1->\UseHookWithArguments {cmd/bar/before}{1}{#1}\typeout {[bar/body] (#1)}\UseHookWithArguments {cmd/bar/after}{1}{#1}.
l. ...\show\bar
<<< Hook: 'cmd/bar/before'
... Attributes:
...   deprecated_generic: N
...   generic: Y
...   declared: Y
...   structure_exist: Y
...   usable: Y
...   disabled: N
...   empty: N
...   reversed: N
...   generic_reversed: N
...   execute_immediately: N
...   # of arguments: 1
... Code chunks:
...   'top level' -> \typeout {[bar/before] (#1)}\typeout {[bar/before/2] (#1)}
...   next-only empty
... Default rules:
...   None
... Rules:
...   None
... Execution order:
...   None
>>>
<<< Hook: 'cmd/bar/after'
... Attributes:
...   deprecated_generic: N
...   generic: Y
...   declared: Y
...   structure_exist: Y
...   usable: Y
...   disabled: N
...   empty: N
...   reversed: Y
...   generic_reversed: Y
...   execute_immediately: N
...   # of arguments: 1
... Code chunks:
...   'top level' -> \typeout {[bar/after] (##2)}\typeout {[bar/after/2] (##2)}
...   next-only empty
... Default rules:
...   None
... Rules:
...   None
... Execution order:
...   None
>>>
! LaTeX hooks Error: Generic hooks cannot be added to '\Afoo'.
For immediate help type H <return>.
 ...                                              
l. ......}[top-level]{\typeout{[Afoo/before] (#1)}}
You tried to add a hook to '\Afoo', but LaTeX was unable to patch the command
because it doesn't exist.
! Illegal parameter number in definition of \__hook_toplevel cmd/Abar/after.
<to be read again> 
                   2
l. ......r}[top-level]{\typeout{[Abar/after] (#2)}}
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.
<<< Hook: 'cmdAfoobefore'
... Attributes:
...   deprecated_generic: N
...   generic: N
...   declared: N
...   structure_exist: Y
...   usable: N
...   disabled: N
...   empty: N
...   reversed: N
...   generic_reversed: N
...   execute_immediately: N
...   # of arguments: 0
... Code chunks:
...   'top level' -> \typeout {[Afoo/before] (#1)}
...   next-only empty
... Default rules:
...   None
... Rules:
...   None
... Execution order:
...   None
>>>
<<< Hook: 'cmd/Afoo/before'
... Attributes:
...   deprecated_generic: N
...   generic: Y
...   declared: N
...   structure_exist: Y
...   usable: Y
...   disabled: N
...   empty: N
...   reversed: N
...   generic_reversed: N
...   execute_immediately: N
...   # of arguments: 9
... Code chunks:
...   'top level' -> \typeout {[Afoo/before] (#1)}
...   next-only empty
... Default rules:
...   None
... Rules:
...   None
... Execution order:
...   None
>>>
> \Abar=macro:
#1->\UseHookWithArguments {cmd/Abar/before}{1}{#1}\typeout {[Abar/body] (#1)}\UseHookWithArguments {cmd/Abar/after}{1}{#1}.
l. ...\show\Abar
<<< Hook: 'cmd/Abar/before'
... Attributes:
...   deprecated_generic: N
...   generic: Y
...   declared: Y
...   structure_exist: Y
...   usable: Y
...   disabled: N
...   empty: N
...   reversed: N
...   generic_reversed: N
...   execute_immediately: N
...   # of arguments: 1
... Code chunks:
...   'top level' -> \typeout {[Abar/before] (#1)}
...   next-only empty
... Default rules:
...   None
... Rules:
...   None
... Execution order:
...   None
>>>
<<< Hook: 'cmd/Abar/after'
... Attributes:
...   deprecated_generic: N
...   generic: Y
...   declared: Y
...   structure_exist: Y
...   usable: Y
...   disabled: N
...   empty: N
...   reversed: Y
...   generic_reversed: Y
...   execute_immediately: N
...   # of arguments: 1
... Code chunks:
...   'top level' -> \typeout {[Abar/after] (##2)}
...   next-only empty
... Default rules:
...   None
... Rules:
...   None
... Execution order:
...   None
>>>
