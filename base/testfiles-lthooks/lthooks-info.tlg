This is a generated file for the l3build validation system.
Don't change this file in any respect.
========== UNDECLARED
-> The hook 'HOOK NAME 0':
> The hook is not declared.
> The hook is empty.
<recently read> }
l. ...\ShowHook{HOOK NAME 0}
==> Hook: 'HOOK NAME 0'
> not declared.
<recently read> }
l. ...\ShowHookInfo{HOOK NAME 0}
========== + TOP LEVEL
-> The hook 'HOOK NAME 0':
> The hook is not declared.
> Code chunks:
>     ---
> Document-level (top-level) code:
>     -> \typeout {[TOP LEVEL]}
> Extra code for next invocation:
>     ---
> Rules:
>     ---
> Execution order:
>     Not set because the hook is undeclared.
<recently read> }
l. ...\ShowHook{HOOK NAME 0}
==> Hook: 'HOOK NAME 0'
>     not declared
> Code chunks:
>     top level -> \typeout {[TOP LEVEL]}
> No execution.
<recently read> }
l. ...\ShowHookInfo{HOOK NAME 0}
========== + LABEL 1
-> The hook 'HOOK NAME 0':
> The hook is not declared.
> Code chunks:
>     LABEL 1 -> \typeout {[code 1]}
> Document-level (top-level) code:
>     -> \typeout {[TOP LEVEL]}
> Extra code for next invocation:
>     ---
> Rules:
>     ---
> Execution order:
>     Not set because the hook is undeclared.
<recently read> }
l. ...\ShowHook{HOOK NAME 0}
==> Hook: 'HOOK NAME 0'
>     not declared
> Code chunks:
>     'LABEL 1' -> \typeout {[code 1]}
>     top level -> \typeout {[TOP LEVEL]}
> No execution.
<recently read> }
l. ...\ShowHookInfo{HOOK NAME 0}
========== + LABEL 2
-> The hook 'HOOK NAME 0':
> The hook is not declared.
> Code chunks:
>     LABEL 1 -> \typeout {[code 1]}
>     LABEL 2 -> \typeout {[code 2]}
> Document-level (top-level) code:
>     -> \typeout {[TOP LEVEL]}
> Extra code for next invocation:
>     ---
> Rules:
>     ---
> Execution order:
>     Not set because the hook is undeclared.
<recently read> }
l. ...\ShowHook{HOOK NAME 0}
==> Hook: 'HOOK NAME 0'
>     not declared
> Code chunks:
>     'LABEL 1' -> \typeout {[code 1]}
>     'LABEL 2' -> \typeout {[code 2]}
>     top level -> \typeout {[TOP LEVEL]}
> No execution.
<recently read> }
l. ...\ShowHookInfo{HOOK NAME 0}
========== + LABEL 3
-> The hook 'HOOK NAME 0':
> The hook is not declared.
> Code chunks:
>     LABEL 1 -> \typeout {[code 1]}
>     LABEL 2 -> \typeout {[code 2]}
>     LABEL 3 -> \typeout {[code 3]}
> Document-level (top-level) code:
>     -> \typeout {[TOP LEVEL]}
> Extra code for next invocation:
>     ---
> Rules:
>     ---
> Execution order:
>     Not set because the hook is undeclared.
<recently read> }
l. ...\ShowHook{HOOK NAME 0}
==> Hook: 'HOOK NAME 0'
>     not declared
> Code chunks:
>     'LABEL 1' -> \typeout {[code 1]}
>     'LABEL 2' -> \typeout {[code 2]}
>     'LABEL 3' -> \typeout {[code 3]}
>     top level -> \typeout {[TOP LEVEL]}
> No execution.
<recently read> }
l. ...\ShowHookInfo{HOOK NAME 0}
========== + NEXT
-> The hook 'HOOK NAME 0':
> The hook is not declared.
> Code chunks:
>     LABEL 1 -> \typeout {[code 1]}
>     LABEL 2 -> \typeout {[code 2]}
>     LABEL 3 -> \typeout {[code 3]}
> Document-level (top-level) code:
>     -> \typeout {[TOP LEVEL]}
> Extra code for next invocation:
>     -> \typeout {[Next only]}
> Rules:
>     ---
> Execution order:
>     Not set because the hook is undeclared.
<recently read> }
l. ...\ShowHook{HOOK NAME 0}
==> Hook: 'HOOK NAME 0'
>     not declared
> Code chunks:
>     'LABEL 1' -> \typeout {[code 1]}
>     'LABEL 2' -> \typeout {[code 2]}
>     'LABEL 3' -> \typeout {[code 3]}
>     top level -> \typeout {[TOP LEVEL]}
>     next only -> \typeout {[Next only]}
> No execution.
<recently read> }
l. ...\ShowHookInfo{HOOK NAME 0}
========== LABEL 3 < LABEL 1
-> The hook 'HOOK NAME 0':
> The hook is not declared.
> Code chunks:
>     LABEL 1 -> \typeout {[code 1]}
>     LABEL 2 -> \typeout {[code 2]}
>     LABEL 3 -> \typeout {[code 3]}
> Document-level (top-level) code:
>     -> \typeout {[TOP LEVEL]}
> Extra code for next invocation:
>     -> \typeout {[Next only]}
> Rules:
>     LABEL 3|LABEL 1 with relation <
> Execution order:
>     Not set because the hook is undeclared.
<recently read> }
l. ...\ShowHook{HOOK NAME 0}
==> Hook: 'HOOK NAME 0'
>     not declared
> Code chunks:
>     'LABEL 1' -> \typeout {[code 1]}
>     'LABEL 2' -> \typeout {[code 2]}
>     'LABEL 3' -> \typeout {[code 3]}
>     top level -> \typeout {[TOP LEVEL]}
>     next only -> \typeout {[Next only]}
> Rules:
>     'LABEL 3' before 'LABEL 1'
> No execution.
<recently read> }
l. ...\ShowHookInfo{HOOK NAME 0}
========== DEFAULT LABEL 2 > LABEL 3
-> The hook 'HOOK NAME 0':
> The hook is not declared.
> Code chunks:
>     LABEL 1 -> \typeout {[code 1]}
>     LABEL 2 -> \typeout {[code 2]}
>     LABEL 3 -> \typeout {[code 3]}
> Document-level (top-level) code:
>     -> \typeout {[TOP LEVEL]}
> Extra code for next invocation:
>     -> \typeout {[Next only]}
> Rules:
>     LABEL 3|LABEL 1 with relation <
>     LABEL 3|LABEL 2 with default relation <
> Execution order:
>     Not set because the hook is undeclared.
<recently read> }
l. ...\ShowHook{HOOK NAME 0}
==> Hook: 'HOOK NAME 0'
>     not declared
> Code chunks:
>     'LABEL 1' -> \typeout {[code 1]}
>     'LABEL 2' -> \typeout {[code 2]}
>     'LABEL 3' -> \typeout {[code 3]}
>     top level -> \typeout {[TOP LEVEL]}
>     next only -> \typeout {[Next only]}
> Default rules:
>     'LABEL 3' before 'LABEL 2'
> Rules:
>     'LABEL 3' before 'LABEL 1'
> No execution.
<recently read> }
l. ...\ShowHookInfo{HOOK NAME 0}
============================================
========== UNDECLARED
-> The hook 'HOOK NAME':
> The hook is not declared.
> The hook is empty.
<recently read> }
l. ...\ShowHook{HOOK NAME}
==> Hook: 'HOOK NAME'
> not declared.
<recently read> }
l. ...\ShowHookInfo{HOOK NAME}
========== DECLARED EMPTY
-> The hook 'HOOK NAME':
> The hook is empty.
<recently read> }
l. ...\ShowHook{HOOK NAME}
==> Hook: 'HOOK NAME'
> empty.
<recently read> }
l. ...\ShowHookInfo{HOOK NAME}
========== + TOP LEVEL
-> The hook 'HOOK NAME':
> Code chunks:
>     ---
> Document-level (top-level) code (executed last):
>     -> \typeout {[TOP LEVEL]}
> Extra code for next invocation:
>     ---
> Rules:
>     ---
> Execution order:
>     ---.
<recently read> }
l. ...\ShowHook{HOOK NAME}
==> Hook: 'HOOK NAME'
> Code chunks:
>     top level -> \typeout {[TOP LEVEL]}
> Execution order:
>     1: top level.
<recently read> }
l. ...\ShowHookInfo{HOOK NAME}
[TOP LEVEL]
========== + LABEL 1
-> The hook 'HOOK NAME':
> Code chunks:
>     LABEL 1 -> \typeout {[code 1]}
> Document-level (top-level) code (executed last):
>     -> \typeout {[TOP LEVEL]}
> Extra code for next invocation:
>     ---
> Rules:
>     ---
> Execution order:
>     LABEL 1.
<recently read> }
l. ...\ShowHook{HOOK NAME}
==> Hook: 'HOOK NAME'
> Code chunks:
>     'LABEL 1' -> \typeout {[code 1]}
>     top level -> \typeout {[TOP LEVEL]}
> Execution order:
>     1: 'LABEL 1'
>     2: top level.
<recently read> }
l. ...\ShowHookInfo{HOOK NAME}
[code 1]
[TOP LEVEL]
========== + LABEL 2
-> The hook 'HOOK NAME':
> Code chunks:
>     LABEL 1 -> \typeout {[code 1]}
>     LABEL 2 -> \typeout {[code 2]}
> Document-level (top-level) code (executed last):
>     -> \typeout {[TOP LEVEL]}
> Extra code for next invocation:
>     ---
> Rules:
>     ---
> Execution order:
>     LABEL 1, LABEL 2.
<recently read> }
l. ...\ShowHook{HOOK NAME}
==> Hook: 'HOOK NAME'
> Code chunks:
>     'LABEL 1' -> \typeout {[code 1]}
>     'LABEL 2' -> \typeout {[code 2]}
>     top level -> \typeout {[TOP LEVEL]}
> Execution order:
>     1: 'LABEL 1'
>     2: 'LABEL 2'
>     3: top level.
<recently read> }
l. ...\ShowHookInfo{HOOK NAME}
[code 1]
[code 2]
[TOP LEVEL]
========== + LABEL 3
-> The hook 'HOOK NAME':
> Code chunks:
>     LABEL 1 -> \typeout {[code 1]}
>     LABEL 2 -> \typeout {[code 2]}
>     LABEL 3 -> \typeout {[code 3]}
> Document-level (top-level) code (executed last):
>     -> \typeout {[TOP LEVEL]}
> Extra code for next invocation:
>     ---
> Rules:
>     LABEL 3|LABEL 2 with default relation <
> Execution order (after applying rules):
>     LABEL 1, LABEL 3, LABEL 2.
<recently read> }
l. ...\ShowHook{HOOK NAME}
==> Hook: 'HOOK NAME'
> Code chunks:
>     'LABEL 1' -> \typeout {[code 1]}
>     'LABEL 2' -> \typeout {[code 2]}
>     'LABEL 3' -> \typeout {[code 3]}
>     top level -> \typeout {[TOP LEVEL]}
> Default rules:
>     'LABEL 3' before 'LABEL 2'
> Execution order:
>     1: 'LABEL 1'
>     2: 'LABEL 3'
>     3: 'LABEL 2'
>     4: top level.
<recently read> }
l. ...\ShowHookInfo{HOOK NAME}
[code 1]
[code 3]
[code 2]
[TOP LEVEL]
========== + NEXT
-> The hook 'HOOK NAME':
> Code chunks:
>     LABEL 1 -> \typeout {[code 1]}
>     LABEL 2 -> \typeout {[code 2]}
>     LABEL 3 -> \typeout {[code 3]}
> Document-level (top-level) code (executed last):
>     -> \typeout {[TOP LEVEL]}
> Extra code for next invocation:
>     -> \typeout {[Next only]}
> Rules:
>     LABEL 3|LABEL 2 with default relation <
> Execution order (after applying rules):
>     LABEL 1, LABEL 3, LABEL 2.
<recently read> }
l. ...\ShowHook{HOOK NAME}
==> Hook: 'HOOK NAME'
> Code chunks:
>     'LABEL 1' -> \typeout {[code 1]}
>     'LABEL 2' -> \typeout {[code 2]}
>     'LABEL 3' -> \typeout {[code 3]}
>     top level -> \typeout {[TOP LEVEL]}
>     next only -> \typeout {[Next only]}
> Default rules:
>     'LABEL 3' before 'LABEL 2'
> Execution order:
>     1: 'LABEL 1'
>     2: 'LABEL 3'
>     3: 'LABEL 2'
>     4: 'top level'
>     5: next only.
<recently read> }
l. ...\ShowHookInfo{HOOK NAME}
[code 1]
[code 3]
[code 2]
[TOP LEVEL]
[Next only]
========== LABEL 3 < LABEL 1
-> The hook 'HOOK NAME':
> Code chunks:
>     LABEL 1 -> \typeout {[code 1]}
>     LABEL 2 -> \typeout {[code 2]}
>     LABEL 3 -> \typeout {[code 3]}
> Document-level (top-level) code (executed last):
>     -> \typeout {[TOP LEVEL]}
> Extra code for next invocation:
>     ---
> Rules:
>     LABEL 3|LABEL 1 with relation <
>     LABEL 3|LABEL 2 with default relation <
> Execution order (after applying rules):
>     LABEL 3, LABEL 1, LABEL 2.
<recently read> }
l. ...\ShowHook{HOOK NAME}
==> Hook: 'HOOK NAME'
> Code chunks:
>     'LABEL 1' -> \typeout {[code 1]}
>     'LABEL 2' -> \typeout {[code 2]}
>     'LABEL 3' -> \typeout {[code 3]}
>     top level -> \typeout {[TOP LEVEL]}
> Default rules:
>     'LABEL 3' before 'LABEL 2'
> Rules:
>     'LABEL 3' before 'LABEL 1'
> Execution order:
>     1: 'LABEL 3'
>     2: 'LABEL 1'
>     3: 'LABEL 2'
>     4: top level.
<recently read> }
l. ...\ShowHookInfo{HOOK NAME}
[code 3]
[code 1]
[code 2]
[TOP LEVEL]
========== DEFAULT LABEL 2 > LABEL 3
-> The hook 'HOOK NAME':
> Code chunks:
>     LABEL 1 -> \typeout {[code 1]}
>     LABEL 2 -> \typeout {[code 2]}
>     LABEL 3 -> \typeout {[code 3]}
> Document-level (top-level) code (executed last):
>     -> \typeout {[TOP LEVEL]}
> Extra code for next invocation:
>     ---
> Rules:
>     LABEL 3|LABEL 1 with relation <
>     LABEL 3|LABEL 2 with default relation <
> Execution order (after applying rules):
>     LABEL 3, LABEL 1, LABEL 2.
<recently read> }
l. ...\ShowHook{HOOK NAME}
==> Hook: 'HOOK NAME'
> Code chunks:
>     'LABEL 1' -> \typeout {[code 1]}
>     'LABEL 2' -> \typeout {[code 2]}
>     'LABEL 3' -> \typeout {[code 3]}
>     top level -> \typeout {[TOP LEVEL]}
> Default rules:
>     'LABEL 3' before 'LABEL 2'
> Rules:
>     'LABEL 3' before 'LABEL 1'
> Execution order:
>     1: 'LABEL 3'
>     2: 'LABEL 1'
>     3: 'LABEL 2'
>     4: top level.
<recently read> }
l. ...\ShowHookInfo{HOOK NAME}
[code 3]
[code 1]
[code 2]
[TOP LEVEL]
============================================
========== UNDECLARED
-> The hook 'EMAN KOOH':
> The hook is not declared.
> The hook is empty.
<recently read> }
l. ...\ShowHook{EMAN KOOH}
==> Hook: 'EMAN KOOH'
> not declared.
<recently read> }
l. ...\ShowHookInfo{EMAN KOOH}
========== DECLARED REVERSED
-> The hook 'EMAN KOOH':
> The hook is empty.
<recently read> }
l. ...\ShowHook{EMAN KOOH}
==> Hook: 'EMAN KOOH'
> empty.
<recently read> }
l. ...\ShowHookInfo{EMAN KOOH}
========== + TOP LEVEL
-> The hook 'EMAN KOOH':
> Code chunks:
>     ---
> Document-level (top-level) code (executed first):
>     -> \typeout {[TOP LEVEL]}
> Extra code for next invocation:
>     ---
> Rules:
>     ---
> Execution order (after reversal):
>     ---.
<recently read> }
l. ...\ShowHook{EMAN KOOH}
==> Hook: 'EMAN KOOH'
> Code chunks:
>     top level -> \typeout {[TOP LEVEL]}
> Execution order:
>     1: top level.
<recently read> }
l. ...\ShowHookInfo{EMAN KOOH}
[TOP LEVEL]
========== + LABEL 1
-> The hook 'EMAN KOOH':
> Code chunks:
>     LABEL 1 -> \typeout {[code 1]}
> Document-level (top-level) code (executed first):
>     -> \typeout {[TOP LEVEL]}
> Extra code for next invocation:
>     ---
> Rules:
>     ---
> Execution order (after reversal):
>     LABEL 1.
<recently read> }
l. ...\ShowHook{EMAN KOOH}
==> Hook: 'EMAN KOOH'
> Code chunks:
>     'LABEL 1' -> \typeout {[code 1]}
>     top level -> \typeout {[TOP LEVEL]}
> Execution order:
>     1: 'top level'
>     2: LABEL 1.
<recently read> }
l. ...\ShowHookInfo{EMAN KOOH}
[TOP LEVEL]
[code 1]
========== + LABEL 2
-> The hook 'EMAN KOOH':
> Code chunks:
>     LABEL 1 -> \typeout {[code 1]}
>     LABEL 2 -> \typeout {[code 2]}
> Document-level (top-level) code (executed first):
>     -> \typeout {[TOP LEVEL]}
> Extra code for next invocation:
>     ---
> Rules:
>     ---
> Execution order (after reversal):
>     LABEL 2, LABEL 1.
<recently read> }
l. ...\ShowHook{EMAN KOOH}
==> Hook: 'EMAN KOOH'
> Code chunks:
>     'LABEL 1' -> \typeout {[code 1]}
>     'LABEL 2' -> \typeout {[code 2]}
>     top level -> \typeout {[TOP LEVEL]}
> Execution order:
>     1: 'top level'
>     2: 'LABEL 2'
>     3: LABEL 1.
<recently read> }
l. ...\ShowHookInfo{EMAN KOOH}
[TOP LEVEL]
[code 2]
[code 1]
========== + LABEL 3
-> The hook 'EMAN KOOH':
> Code chunks:
>     LABEL 1 -> \typeout {[code 1]}
>     LABEL 2 -> \typeout {[code 2]}
>     LABEL 3 -> \typeout {[code 3]}
> Document-level (top-level) code (executed first):
>     -> \typeout {[TOP LEVEL]}
> Extra code for next invocation:
>     ---
> Rules:
>     LABEL 3|LABEL 2 with default relation <
> Execution order (after reversal and applying rules):
>     LABEL 2, LABEL 3, LABEL 1.
<recently read> }
l. ...\ShowHook{EMAN KOOH}
==> Hook: 'EMAN KOOH'
> Code chunks:
>     'LABEL 1' -> \typeout {[code 1]}
>     'LABEL 2' -> \typeout {[code 2]}
>     'LABEL 3' -> \typeout {[code 3]}
>     top level -> \typeout {[TOP LEVEL]}
> Default rules:
>     'LABEL 3' before 'LABEL 2'
> Execution order:
>     1: 'top level'
>     2: 'LABEL 2'
>     3: 'LABEL 3'
>     4: LABEL 1.
<recently read> }
l. ...\ShowHookInfo{EMAN KOOH}
[TOP LEVEL]
[code 2]
[code 3]
[code 1]
========== + NEXT
-> The hook 'EMAN KOOH':
> Code chunks:
>     LABEL 1 -> \typeout {[code 1]}
>     LABEL 2 -> \typeout {[code 2]}
>     LABEL 3 -> \typeout {[code 3]}
> Document-level (top-level) code (executed first):
>     -> \typeout {[TOP LEVEL]}
> Extra code for next invocation:
>     -> \typeout {[Next only]}
> Rules:
>     LABEL 3|LABEL 2 with default relation <
> Execution order (after reversal and applying rules):
>     LABEL 2, LABEL 3, LABEL 1.
<recently read> }
l. ...\ShowHook{EMAN KOOH}
==> Hook: 'EMAN KOOH'
> Code chunks:
>     'LABEL 1' -> \typeout {[code 1]}
>     'LABEL 2' -> \typeout {[code 2]}
>     'LABEL 3' -> \typeout {[code 3]}
>     top level -> \typeout {[TOP LEVEL]}
>     next only -> \typeout {[Next only]}
> Default rules:
>     'LABEL 3' before 'LABEL 2'
> Execution order:
>     1: 'top level'
>     2: 'LABEL 2'
>     3: 'LABEL 3'
>     4: 'LABEL 1'
>     5: next only.
<recently read> }
l. ...\ShowHookInfo{EMAN KOOH}
[TOP LEVEL]
[code 2]
[code 3]
[code 1]
[Next only]
========== + LABEL 3 < LABEL 1
-> The hook 'EMAN KOOH':
> Code chunks:
>     LABEL 1 -> \typeout {[code 1]}
>     LABEL 2 -> \typeout {[code 2]}
>     LABEL 3 -> \typeout {[code 3]}
> Document-level (top-level) code (executed first):
>     -> \typeout {[TOP LEVEL]}
> Extra code for next invocation:
>     ---
> Rules:
>     LABEL 3|LABEL 1 with relation <
>     LABEL 3|LABEL 2 with default relation <
> Execution order (after reversal and applying rules):
>     LABEL 2, LABEL 3, LABEL 1.
<recently read> }
l. ...\ShowHook{EMAN KOOH}
==> Hook: 'EMAN KOOH'
> Code chunks:
>     'LABEL 1' -> \typeout {[code 1]}
>     'LABEL 2' -> \typeout {[code 2]}
>     'LABEL 3' -> \typeout {[code 3]}
>     top level -> \typeout {[TOP LEVEL]}
> Default rules:
>     'LABEL 3' before 'LABEL 2'
> Rules:
>     'LABEL 3' before 'LABEL 1'
> Execution order:
>     1: 'top level'
>     2: 'LABEL 2'
>     3: 'LABEL 3'
>     4: LABEL 1.
<recently read> }
l. ...\ShowHookInfo{EMAN KOOH}
[TOP LEVEL]
[code 2]
[code 3]
[code 1]
========== + DEFAULT LABEL 2 > LABEL 3
-> The hook 'EMAN KOOH':
> Code chunks:
>     LABEL 1 -> \typeout {[code 1]}
>     LABEL 2 -> \typeout {[code 2]}
>     LABEL 3 -> \typeout {[code 3]}
> Document-level (top-level) code (executed first):
>     -> \typeout {[TOP LEVEL]}
> Extra code for next invocation:
>     ---
> Rules:
>     LABEL 3|LABEL 1 with relation <
>     LABEL 3|LABEL 2 with default relation <
> Execution order (after reversal and applying rules):
>     LABEL 2, LABEL 3, LABEL 1.
<recently read> }
l. ...\ShowHook{EMAN KOOH}
==> Hook: 'EMAN KOOH'
> Code chunks:
>     'LABEL 1' -> \typeout {[code 1]}
>     'LABEL 2' -> \typeout {[code 2]}
>     'LABEL 3' -> \typeout {[code 3]}
>     top level -> \typeout {[TOP LEVEL]}
> Default rules:
>     'LABEL 3' before 'LABEL 2'
> Rules:
>     'LABEL 3' before 'LABEL 1'
> Execution order:
>     1: 'top level'
>     2: 'LABEL 2'
>     3: 'LABEL 3'
>     4: LABEL 1.
<recently read> }
l. ...\ShowHookInfo{EMAN KOOH}
[TOP LEVEL]
[code 2]
[code 3]
[code 1]
============================================
UNKNOWN ENVIRONMENT
-> The generic hook 'env/lthooks.regression test/before':
> The hook is not declared.
> The hook is empty.
<recently read> }
l. ......wHook{env/lthooks.regression test/before}
==> Hook: 'env/lthooks.regression test/before'
> buitin generic.
<recently read> }
l. ......kInfo{env/lthooks.regression test/before}
CREATING ENVIRONMENT
-> The generic hook 'env/lthooks.regression test/before':
> The hook is not declared.
> The hook is empty.
<recently read> }
l. ......wHook{env/lthooks.regression test/before}
==> Hook: 'env/lthooks.regression test/before'
> buitin generic.
<recently read> }
l. ......kInfo{env/lthooks.regression test/before}
============================================
========== GENERIC HOOK
-> The hook 'GENERIC':
> The hook is not declared.
> The hook is empty.
<recently read> }
l. ...\ShowHook{GENERIC}
==> Hook: 'GENERIC'
> not declared.
<recently read> }
l. ...\ShowHookInfo{GENERIC}
-> The hook 'GENERIC':
> The hook is not declared.
> Code chunks:
>     LABEL -> \typeout {[CODE]}
> Document-level (top-level) code:
>     ---
> Extra code for next invocation:
>     ---
> Rules:
>     ---
> Execution order:
>     Not set because the hook is undeclared.
<recently read> }
l. ...\ShowHook{GENERIC}
==> Hook: 'GENERIC'
>     not declared
> Code chunks:
>     'LABEL' -> \typeout {[CODE]}
> No execution.
<recently read> }
l. ...\ShowHookInfo{GENERIC}
========== ACTIVATE GENERIC HOOK
-> The hook 'GENERIC':
> Code chunks:
>     LABEL -> \typeout {[CODE]}
> Document-level (top-level) code (executed last):
>     ---
> Extra code for next invocation:
>     ---
> Rules:
>     ---
> Execution order:
>     LABEL.
<recently read> }
l. ...\ShowHook{GENERIC}
==> Hook: 'GENERIC'
> Code chunks:
>     'LABEL' -> \typeout {[CODE]}
> Execution order:
>     1: LABEL.
<recently read> }
l. ...\ShowHookInfo{GENERIC}
[CODE]
============================================
========== HOOK WITH ARGUMENTS A
-> The hook 'HWA-a)':
> The hook is not declared.
> The hook is empty.
<recently read> }
l. ...\ShowHook{HWA-a)}
==> Hook: 'HWA-a)'
> not declared.
<recently read> }
l. ...\ShowHookInfo{HWA-a)}
-> The hook 'HWA-a)' (2 arguments):
> The hook is empty.
<recently read> }
l. ...\ShowHook{HWA-a)}
==> Hook: 'HWA-a)'
> 2 arguments.
<recently read> }
l. ...\ShowHookInfo{HWA-a)}
============================================
!!!! If this test changes the documentation needs updating !!!!
